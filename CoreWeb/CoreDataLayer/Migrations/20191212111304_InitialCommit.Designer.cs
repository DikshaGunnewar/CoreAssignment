// <auto-generated />
using CoreDataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreDataLayer.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20191212111304_InitialCommit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreDataLayer.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Designation");

                    b.Property<string>("EmailId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<float>("Salary");

                    b.Property<bool>("isActive");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "New York",
                            CompanyName = "XYZ Inc",
                            Designation = "Developer",
                            EmailId = "john@yopmail.com",
                            Name = "John",
                            Salary = 30000f,
                            isActive = true
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "North America",
                            CompanyName = "Test Inc",
                            Designation = "QA",
                            EmailId = "elena@yopmail.com",
                            Name = "Elena",
                            Password = "Password",
                            Salary = 50000f,
                            isActive = true
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "South America",
                            CompanyName = "ABC Inc",
                            Designation = "Deveploer",
                            EmailId = "tom@yopmail.com",
                            Name = "Tom",
                            Password = "Password",
                            Salary = 40000f,
                            isActive = true
                        },
                        new
                        {
                            EmployeeId = 4,
                            Address = "London",
                            CompanyName = "Lol Inc",
                            Designation = "UI Developer",
                            EmailId = "suzi@yopmail.com",
                            Name = "Suzi",
                            Password = "Password",
                            Salary = 35000f,
                            isActive = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
